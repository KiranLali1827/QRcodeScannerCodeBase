#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1.3 effective-4.2 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import VeridiumBOPS;
@import VeridiumCore;
@import VeridiumQRReader;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VeridiumOrchestrator",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC20VeridiumOrchestrator30AggregatedAuthenticationResult")
@interface AggregatedAuthenticationResult : VeridiumAggregatedAuthResult
- (nonnull instancetype)initWithOverallResult:(VeridiumAuthResult)overallResult SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator16BaseViewProtocol_")
@protocol BaseViewProtocol
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC20VeridiumOrchestrator24BasicAlertViewController")
@interface BasicAlertViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)presentInTopmost;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator25BasicDialogViewController")
@interface BasicDialogViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator31BiometricsEnrollmentCoordinator")
@interface BiometricsEnrollmentCoordinator : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator10Disclaimer")
@interface Disclaimer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class VersionInformation;

SWIFT_CLASS("_TtC20VeridiumOrchestrator11HelpContent")
@interface HelpContent : NSObject
- (NSArray<NSString *> * _Nonnull)biometricHints SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Disclaimer *> * _Nonnull)disclaimers SWIFT_WARN_UNUSED_RESULT;
- (void)versionInfoWithCompletion:(void (^ _Nonnull)(VersionInformation * _Nonnull))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator25OfflineModeViewController")
@interface OfflineModeViewController : UIViewController
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator21OtpCodeViewController")
@interface OtpCodeViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator24ProcessingViewController")
@interface ProcessingViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)dismissViewControllerAnimated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, SDKStatus, open) {
  SDKStatusPAIRING = 1,
};



@class UIColor;

@interface UIButton (SWIFT_EXTENSION(VeridiumOrchestrator))
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic, strong) UIColor * _Nullable borderColor;
@end










SWIFT_CLASS("_TtC20VeridiumOrchestrator16VIDConfiguration")
@interface VIDConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull license;
@property (nonatomic) BOOL isDebugEnabled;
@property (nonatomic) BOOL isWaitForLocationEnabled;
@property (nonatomic) NSInteger locationAccuracy;
@property (nonatomic) NSInteger locationWaitTime;
@property (nonatomic) BOOL displayUbaScore;
@property (nonatomic) BOOL isAuthenticationContextEnabled;
@property (nonatomic, readonly, copy) NSDictionary * _Nonnull serverSettings;
@property (nonatomic, strong) UIColor * _Nullable progressSpinnerColor;
@property (nonatomic) BOOL useUBA;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull supportEmailAddresses;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator8VIDError")
@interface VIDError : NSError
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end

enum LicenseStatus : NSInteger;

SWIFT_CLASS("_TtC20VeridiumOrchestrator15VIDInitResponse")
@interface VIDInitResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@property (nonatomic) enum LicenseStatus licenseStatus;
@property (nonatomic) NSError * _Nullable error;
@end

typedef SWIFT_ENUM(NSInteger, LicenseStatus, open) {
  LicenseStatusOk = 0,
  LicenseStatusGracePeriod = 1,
  LicenseStatusExpired = 2,
  LicenseStatusInvalid = 3,
};

@class VIDProfile;
@class NSDictionary;
enum VIDState : NSInteger;

SWIFT_CLASS("_TtC20VeridiumOrchestrator12VIDMobileSDK")
@interface VIDMobileSDK : NSObject
/// Singleton object for SDK
///
/// returns:
/// <code>VIDMobileSDK</code>
+ (VIDMobileSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (VIDConfiguration * _Nonnull)getConfiguration SWIFT_WARN_UNUSED_RESULT;
/// Initialize the SDK. This method should be called when app starts applicationDidFinishLaunchingWithOptions.
/// SDK needs to be initialized every time the app starts. Pass settings through the config object which needs to be
/// retrieved first from the SDK with a ‘getConfiguration’ call.
/// The license will be used to unlock the SDK features.
/// Operations like biometric library initialization and push handlers are also done in the background.
///
/// returns:
/// <code>VIDInitResponse</code>
- (VIDInitResponse * _Nonnull)initialize:(VIDConfiguration * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
/// Unlock sensitive device data. Method should be called when the app starts applicationDidFinishLaunchingWithOptions
/// Sensitive data needs to be unlocked using server communication.
///
/// returns:
/// <code>VIDUnlockDelegate</code>
- (void)unlock;
/// Handler method for appDidBecomeActive event
/// Way of notifying the SDK that the app became active. Operations done in the background include updateting the app’s push notification state
///
/// returns:
/// void
- (void)appDidBecomeActive;
/// Communicate the remote notification token received by the app after a successful registration
/// <ul>
///   <li>
///     paremeter pushTokenData: token received on application didRegisterForRemoteNotificationsWithDeviceToken
///   </li>
/// </ul>
///
/// returns:
/// void
- (void)setRemoteNotificationsTokenWithPushTokenData:(NSData * _Nullable)pushTokenData;
/// Notify VeridiumSDK that a push notification was received.
/// \param notification push notification received on application didReceiveRemoteNotification
///
///
/// returns:
/// void
- (void)handlePush:(NSDictionary * _Nonnull)notification;
/// Perform enrollment for a user. The integration details and server connection information are retrieved with the help of a QR code.
/// seealso:
/// <code>enroll(serverPairingBase64Token: String, userEnrollmentToken: String?)</code>
/// The enrollment process starts with the scanning of a server pairing QR that will enable the SDK to gather information about the integration, server configuration and communication procedures, validate security aspects.
/// The process continues with user registration, particular to the integration. The integration contains a self describing section that can be interpreted by the SDK and adapt the registration process accordingly.
/// If a userEnrollmentToken is provided it will be injected into the registration process if this is specified and supported by the integration definition.
/// \param userEnrollmentToken <em>optional</em> token that will automatically enroll the user without requiring input
///
///
/// returns:
/// <code>VIDEnrollDelegate</code>
- (void)enrollWithUserEnrollmentToken:(NSString * _Nullable)userEnrollmentToken;
/// Perform enrollment for a user. The integration details and server connection information are queried based on a token.
/// seealso:
/// <code>enroll(userEnrollmentToken: String?)</code>
/// The SDK gatherers information about the integration, server configuration and communication procedures, validate security aspects using the provided token.
/// The process continues with user registration, particular to the integration. The integration contains a self describing section that can be interpreted by the SDK and adapt the registration process accordingly.
/// If a userEnrollmentToken is provided it will be injected into the registration process if this is specified and supported by the integration definition.
/// \param serverPairingBase64Token token to retrieve integration information and server configs
///
/// \param userEnrollmentToken <em>optional</em> token that will automatically enroll the user without requiring input
///
///
/// returns:
/// <code>VIDEnrollDelegate</code>
- (void)enrollWithServerPairingBase64Token:(NSString * _Nonnull)serverPairingBase64Token userEnrollmentToken:(NSString * _Nullable)userEnrollmentToken;
/// Perform biometric authentication using the session id and profile.
/// requires:
/// profile is enroled
/// \param profile profile to be authenticated
///
/// \param sessionId id of the session to be authenticated
///
/// \param extraValues session external values to provide for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateWithProfile:(VIDProfile * _Nonnull)profile :(NSString * _Nonnull)sessionId :(NSDictionary * _Nullable)extraValues;
/// Perform biometric QR authentication using the profile enrolled.
/// requires:
/// profile is enrolled
/// This authentication method will use the profile to perform an authentication initiated with QR scanning.
/// \param profile profile to use for authentication
///
/// \param extraValues session external values to provide for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateWithQR:(VIDProfile * _Nonnull)profile :(NSDictionary * _Nullable)extraValues;
/// Perform biometric QR authentication using the only profile enrolled.
/// requires:
/// one and only one profile is enrolled
/// This authentication method will use the single enrolled profile to perform an authentication initiated with QR scanning.
/// \param extraValues session external values to provide for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateWithQR:(NSDictionary * _Nullable)extraValues;
/// Perform biometric authentication offline (locally).
/// requires:
/// profile is ‘local’ meaning it was enrolled and is used only with local authentication and no
/// information is stored on any servers
/// This authentication method will use the profile to perform an authentication locally.
/// \param profile profile to use for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateOffline:(VIDProfile * _Nonnull)profile;
/// Prepare the request for a proxy authentication. The response can be used by 3rd Parties to start an authentication
/// on the current device
/// requires:
/// profile is enrolled
/// This authentication method will use the enrolled profile to perform authentication based on the session data received inderectly (proxied)
/// \param profile profile to use for authentication
///
/// \param completion returns asynchronously a dictionary with the data that needs to be sent to Veridium Server
///
///
/// returns:
/// Void
- (void)authenticateThroughProxyStartWithProfile:(VIDProfile * _Nonnull)profile completion:(void (^ _Nonnull)(NSDictionary * _Nonnull))completion;
/// Perform biometric authentication and sign response. The response can be used for session verify through 3rd party server.
/// requires:
/// profile is enrolled
/// This authentication method will use the enrolled profile to perform authentication based on the session data received inderectly (proxied)
/// \param profile profile to use for authentication
///
/// \param serverChallenge session data to be used for authentication and signing.
///
///
/// returns:
/// Veridium session id. <code>VIDAuthenticationDelegate</code> will be called when finished
- (NSString * _Nullable)authenticateThroughProxy:(VIDProfile * _Nonnull)profile serverChallenge:(NSString * _Nonnull)serverChallenge SWIFT_WARN_UNUSED_RESULT;
/// Start UBA session
/// Start an UBA session. If there is no session, create one. If there is an active session no actions are taken
/// \param event a string that describes the event
///
///
/// returns:
/// void
- (void)startInMotionSession:(NSString * _Nonnull)event;
/// Record UBA event
/// Record an event for an UBA session. If there is no session, create one. If there is an active session append to it.
/// \param event a string that describes the event
///
///
/// returns:
/// void
- (void)recordInMotionEvent:(NSString * _Nonnull)event;
/// Stop UBA event
/// Stop UBA session.
///
/// returns:
/// void
- (void)stopUBASessionWithSuccess:(BOOL)withSuccess;
/// Start async process of retrieving profiles.
/// requires:
/// enrollment should be completed
/// A query for profiles is issued and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
///
/// returns:
/// cached array of profiles and a server updated version async through <code>VIDProfileDelegate</code>
- (NSArray<VIDProfile *> * _Nonnull)retrieveProfiles SWIFT_WARN_UNUSED_RESULT;
/// Start async process of retrieving a profile profile.
/// requires:
/// enrollment should be completed
/// A query to retrieve a profile by it’s ID is issued and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
///
/// returns:
/// <code>VIDProfileDelegate</code>
- (void)retrieveProfile:(NSString * _Nonnull)alias;
/// Update profile information
/// Start update profile information and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
/// \param profile new profile information to be updated
///
///
/// returns:
/// <code>VIDProfileDelegate</code>
- (void)updateProfile:(VIDProfile * _Nonnull)profile;
/// Delete profile
/// Start delete profile and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
/// \param profile profile to be deleted
///
///
/// returns:
/// <code>VIDProfileDelegate</code>
- (void)deleteProfile:(VIDProfile * _Nonnull)profile;
/// Export debug logs
/// Debug logs are gathered on the client while in operation. This method exports them in a
/// serialized format.
///
/// returns:
/// serialized debug log
- (NSString * _Nonnull)exportLogs SWIFT_WARN_UNUSED_RESULT;
/// Wipe all account information
/// Local and remote information corresponding to the enrolled account is wiped.
- (void)wipeAccountWhenDone:(void (^ _Nullable)(void))whenDone;
/// Get state
/// Locally stored data and device status can be resumed in a list of SDK states. Based
/// on this list the container app can decide on what workflows to start.
///
/// returns:
/// <code>VIDState</code>
- (enum VIDState)getState SWIFT_WARN_UNUSED_RESULT;
/// Get help
/// By calling getter methods on the returned object, different helper information can be achieved: Version info, disclaimers, how to.
///
/// returns:
/// <code>HelpContent</code>
- (HelpContent * _Nonnull)getHelp SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VIDState, open) {
  VIDStateServerPairing = 0,
  VIDStateAccountRegistration = 1,
  VIDStateBiometricEnrollment = 2,
  VIDStateAccountAdvancedRegistration = 3,
  VIDStateAccountRegisteredAndBiometricsSet = 4,
  VIDStateUrlPairingToken = 5,
  VIDStateAppLinkAuthentication = 6,
  VIDStateOffline = 7,
  VIDStateInitializeFailure = 8,
  VIDStateAppUpdateRequired = 9,
  VIDStateReenrollRequired = 10,
  VIDStateUnknown = 11,
};


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator26VIDMobileSDKStatusDelegate_")
@protocol VIDMobileSDKStatusDelegate <NSObject>
@optional
- (void)didStartLongProcessWithStatus:(enum SDKStatus)status processDescription:(NSString * _Nonnull)processDescription;
- (void)didFinishLongProcessWithStatus:(enum SDKStatus)status;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator10VIDProfile")
@interface VIDProfile : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator18VIDProfileDelegate_")
@protocol VIDProfileDelegate <NSObject>
@optional
- (void)didFinishRetrievingProfiles:(NSArray<VIDProfile *> * _Nonnull)_;
- (void)didFinishRetrievingProfile:(VIDProfile * _Nonnull)_;
- (void)didFailRetrieveProfilesWithError:(VIDError * _Nonnull)error;
- (void)didDeleteProfile:(VIDProfile * _Nonnull)_;
- (void)didFailDeleteProfileWithError:(VIDError * _Nonnull)error;
- (void)didCancelDeleteProfile;
- (void)didFinishUpdateProfile:(VIDProfile * _Nonnull)_;
- (void)didFailUpdateProfileWithError:(VIDError * _Nonnull)error;
- (void)didCancelUpdateProfile;
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator15VIDPushDelegate_")
@protocol VIDPushDelegate <NSObject>
- (void)pushesPending;
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator17VIDRevokeDelegate_")
@protocol VIDRevokeDelegate <NSObject>
@optional
- (void)wasPermanentlyRevoked:(NSError * _Nullable)error;
- (void)temporarlyBlocked:(BOOL)state;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator11VIDSettings")
@interface VIDSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class VeridiumProfileData;

@interface VeridiumBOPSAccount (SWIFT_EXTENSION(VeridiumOrchestrator))
@property (nonatomic, copy) NSString * _Nonnull enrolledHand;
@property (nonatomic, readonly) NSInteger privateProfilesCount;
- (void)authenticateForProfileId:(NSString * _Nonnull)profileId onActiveSessionId:(NSString * _Nonnull)sessionId completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateForProfile:(VeridiumProfileData * _Nonnull)profile andRegisterForSessionId:(NSString * _Nonnull)sessionId extraValues:(NSDictionary * _Nullable)extraValues completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)cancelSessionId:(NSString * _Nonnull)sessionId completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (NSString * _Nullable)authenticateForProfileId:(NSString * _Nonnull)profileId serverChallenge:(NSString * _Nonnull)serverChallenge completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion SWIFT_WARN_UNUSED_RESULT;
- (void)authenticateAndRemoveForProfile:(VeridiumProfileData * _Nonnull)profile completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateAndRemoveDeviceWithCompletion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateForUpdateForProfile:(VeridiumProfileData * _Nonnull)profile completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateOfflineForProfile:(VeridiumProfileData * _Nonnull)profile completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)fetchLicenseAndValidateWithForce:(BOOL)force completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator19VeridiumPushManager")
@interface VeridiumPushManager : NSObject <UIApplicationDelegate, VeridiumPushHandlerProtocol>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (void)handlePush:(NSDictionary<NSString *, id> * _Null_unspecified)pushData isAPNS:(BOOL)isAPNS;
@end

@class UIView;

SWIFT_CLASS("_TtC20VeridiumOrchestrator30VeridiumQrReaderViewController")
@interface VeridiumQrReaderViewController : UIViewController <VeridiumQRUIDelegateProtocol>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(BOOL)animated;
- (UIView * _Nonnull)previewView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIStoryboardSegue;

SWIFT_CLASS("_TtC20VeridiumOrchestrator30VeridiumRegisterViewController")
@interface VeridiumRegisterViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator35VeridiumRemoteConfigForceEnrollData")
@interface VeridiumRemoteConfigForceEnrollData : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator36VeridiumTXConfirmationViewController")
@interface VeridiumTXConfirmationViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator25VeridiumUIAlertController")
@interface VeridiumUIAlertController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator18VersionInformation")
@interface VersionInformation : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1.3 effective-4.2 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import VeridiumBOPS;
@import VeridiumCore;
@import VeridiumQRReader;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VeridiumOrchestrator",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC20VeridiumOrchestrator30AggregatedAuthenticationResult")
@interface AggregatedAuthenticationResult : VeridiumAggregatedAuthResult
- (nonnull instancetype)initWithOverallResult:(VeridiumAuthResult)overallResult SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator16BaseViewProtocol_")
@protocol BaseViewProtocol
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC20VeridiumOrchestrator24BasicAlertViewController")
@interface BasicAlertViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)presentInTopmost;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator25BasicDialogViewController")
@interface BasicDialogViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator31BiometricsEnrollmentCoordinator")
@interface BiometricsEnrollmentCoordinator : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator10Disclaimer")
@interface Disclaimer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class VersionInformation;

SWIFT_CLASS("_TtC20VeridiumOrchestrator11HelpContent")
@interface HelpContent : NSObject
- (NSArray<NSString *> * _Nonnull)biometricHints SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Disclaimer *> * _Nonnull)disclaimers SWIFT_WARN_UNUSED_RESULT;
- (void)versionInfoWithCompletion:(void (^ _Nonnull)(VersionInformation * _Nonnull))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator25OfflineModeViewController")
@interface OfflineModeViewController : UIViewController
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator21OtpCodeViewController")
@interface OtpCodeViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator24ProcessingViewController")
@interface ProcessingViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)dismissViewControllerAnimated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, SDKStatus, open) {
  SDKStatusPAIRING = 1,
};



@class UIColor;

@interface UIButton (SWIFT_EXTENSION(VeridiumOrchestrator))
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic, strong) UIColor * _Nullable borderColor;
@end










SWIFT_CLASS("_TtC20VeridiumOrchestrator16VIDConfiguration")
@interface VIDConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nonnull license;
@property (nonatomic) BOOL isDebugEnabled;
@property (nonatomic) BOOL isWaitForLocationEnabled;
@property (nonatomic) NSInteger locationAccuracy;
@property (nonatomic) NSInteger locationWaitTime;
@property (nonatomic) BOOL displayUbaScore;
@property (nonatomic) BOOL isAuthenticationContextEnabled;
@property (nonatomic, readonly, copy) NSDictionary * _Nonnull serverSettings;
@property (nonatomic, strong) UIColor * _Nullable progressSpinnerColor;
@property (nonatomic) BOOL useUBA;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull supportEmailAddresses;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator8VIDError")
@interface VIDError : NSError
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end

enum LicenseStatus : NSInteger;

SWIFT_CLASS("_TtC20VeridiumOrchestrator15VIDInitResponse")
@interface VIDInitResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@property (nonatomic) enum LicenseStatus licenseStatus;
@property (nonatomic) NSError * _Nullable error;
@end

typedef SWIFT_ENUM(NSInteger, LicenseStatus, open) {
  LicenseStatusOk = 0,
  LicenseStatusGracePeriod = 1,
  LicenseStatusExpired = 2,
  LicenseStatusInvalid = 3,
};

@class VIDProfile;
@class NSDictionary;
enum VIDState : NSInteger;

SWIFT_CLASS("_TtC20VeridiumOrchestrator12VIDMobileSDK")
@interface VIDMobileSDK : NSObject
/// Singleton object for SDK
///
/// returns:
/// <code>VIDMobileSDK</code>
+ (VIDMobileSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (VIDConfiguration * _Nonnull)getConfiguration SWIFT_WARN_UNUSED_RESULT;
/// Initialize the SDK. This method should be called when app starts applicationDidFinishLaunchingWithOptions.
/// SDK needs to be initialized every time the app starts. Pass settings through the config object which needs to be
/// retrieved first from the SDK with a ‘getConfiguration’ call.
/// The license will be used to unlock the SDK features.
/// Operations like biometric library initialization and push handlers are also done in the background.
///
/// returns:
/// <code>VIDInitResponse</code>
- (VIDInitResponse * _Nonnull)initialize:(VIDConfiguration * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
/// Unlock sensitive device data. Method should be called when the app starts applicationDidFinishLaunchingWithOptions
/// Sensitive data needs to be unlocked using server communication.
///
/// returns:
/// <code>VIDUnlockDelegate</code>
- (void)unlock;
/// Handler method for appDidBecomeActive event
/// Way of notifying the SDK that the app became active. Operations done in the background include updateting the app’s push notification state
///
/// returns:
/// void
- (void)appDidBecomeActive;
/// Communicate the remote notification token received by the app after a successful registration
/// <ul>
///   <li>
///     paremeter pushTokenData: token received on application didRegisterForRemoteNotificationsWithDeviceToken
///   </li>
/// </ul>
///
/// returns:
/// void
- (void)setRemoteNotificationsTokenWithPushTokenData:(NSData * _Nullable)pushTokenData;
/// Notify VeridiumSDK that a push notification was received.
/// \param notification push notification received on application didReceiveRemoteNotification
///
///
/// returns:
/// void
- (void)handlePush:(NSDictionary * _Nonnull)notification;
/// Perform enrollment for a user. The integration details and server connection information are retrieved with the help of a QR code.
/// seealso:
/// <code>enroll(serverPairingBase64Token: String, userEnrollmentToken: String?)</code>
/// The enrollment process starts with the scanning of a server pairing QR that will enable the SDK to gather information about the integration, server configuration and communication procedures, validate security aspects.
/// The process continues with user registration, particular to the integration. The integration contains a self describing section that can be interpreted by the SDK and adapt the registration process accordingly.
/// If a userEnrollmentToken is provided it will be injected into the registration process if this is specified and supported by the integration definition.
/// \param userEnrollmentToken <em>optional</em> token that will automatically enroll the user without requiring input
///
///
/// returns:
/// <code>VIDEnrollDelegate</code>
- (void)enrollWithUserEnrollmentToken:(NSString * _Nullable)userEnrollmentToken;
/// Perform enrollment for a user. The integration details and server connection information are queried based on a token.
/// seealso:
/// <code>enroll(userEnrollmentToken: String?)</code>
/// The SDK gatherers information about the integration, server configuration and communication procedures, validate security aspects using the provided token.
/// The process continues with user registration, particular to the integration. The integration contains a self describing section that can be interpreted by the SDK and adapt the registration process accordingly.
/// If a userEnrollmentToken is provided it will be injected into the registration process if this is specified and supported by the integration definition.
/// \param serverPairingBase64Token token to retrieve integration information and server configs
///
/// \param userEnrollmentToken <em>optional</em> token that will automatically enroll the user without requiring input
///
///
/// returns:
/// <code>VIDEnrollDelegate</code>
- (void)enrollWithServerPairingBase64Token:(NSString * _Nonnull)serverPairingBase64Token userEnrollmentToken:(NSString * _Nullable)userEnrollmentToken;
/// Perform biometric authentication using the session id and profile.
/// requires:
/// profile is enroled
/// \param profile profile to be authenticated
///
/// \param sessionId id of the session to be authenticated
///
/// \param extraValues session external values to provide for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateWithProfile:(VIDProfile * _Nonnull)profile :(NSString * _Nonnull)sessionId :(NSDictionary * _Nullable)extraValues;
/// Perform biometric QR authentication using the profile enrolled.
/// requires:
/// profile is enrolled
/// This authentication method will use the profile to perform an authentication initiated with QR scanning.
/// \param profile profile to use for authentication
///
/// \param extraValues session external values to provide for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateWithQR:(VIDProfile * _Nonnull)profile :(NSDictionary * _Nullable)extraValues;
/// Perform biometric QR authentication using the only profile enrolled.
/// requires:
/// one and only one profile is enrolled
/// This authentication method will use the single enrolled profile to perform an authentication initiated with QR scanning.
/// \param extraValues session external values to provide for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateWithQR:(NSDictionary * _Nullable)extraValues;
/// Perform biometric authentication offline (locally).
/// requires:
/// profile is ‘local’ meaning it was enrolled and is used only with local authentication and no
/// information is stored on any servers
/// This authentication method will use the profile to perform an authentication locally.
/// \param profile profile to use for authentication
///
///
/// returns:
/// <code>VIDAuthenticationDelegate</code>
- (void)authenticateOffline:(VIDProfile * _Nonnull)profile;
/// Prepare the request for a proxy authentication. The response can be used by 3rd Parties to start an authentication
/// on the current device
/// requires:
/// profile is enrolled
/// This authentication method will use the enrolled profile to perform authentication based on the session data received inderectly (proxied)
/// \param profile profile to use for authentication
///
/// \param completion returns asynchronously a dictionary with the data that needs to be sent to Veridium Server
///
///
/// returns:
/// Void
- (void)authenticateThroughProxyStartWithProfile:(VIDProfile * _Nonnull)profile completion:(void (^ _Nonnull)(NSDictionary * _Nonnull))completion;
/// Perform biometric authentication and sign response. The response can be used for session verify through 3rd party server.
/// requires:
/// profile is enrolled
/// This authentication method will use the enrolled profile to perform authentication based on the session data received inderectly (proxied)
/// \param profile profile to use for authentication
///
/// \param serverChallenge session data to be used for authentication and signing.
///
///
/// returns:
/// Veridium session id. <code>VIDAuthenticationDelegate</code> will be called when finished
- (NSString * _Nullable)authenticateThroughProxy:(VIDProfile * _Nonnull)profile serverChallenge:(NSString * _Nonnull)serverChallenge SWIFT_WARN_UNUSED_RESULT;
/// Start UBA session
/// Start an UBA session. If there is no session, create one. If there is an active session no actions are taken
/// \param event a string that describes the event
///
///
/// returns:
/// void
- (void)startInMotionSession:(NSString * _Nonnull)event;
/// Record UBA event
/// Record an event for an UBA session. If there is no session, create one. If there is an active session append to it.
/// \param event a string that describes the event
///
///
/// returns:
/// void
- (void)recordInMotionEvent:(NSString * _Nonnull)event;
/// Stop UBA event
/// Stop UBA session.
///
/// returns:
/// void
- (void)stopUBASessionWithSuccess:(BOOL)withSuccess;
/// Start async process of retrieving profiles.
/// requires:
/// enrollment should be completed
/// A query for profiles is issued and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
///
/// returns:
/// cached array of profiles and a server updated version async through <code>VIDProfileDelegate</code>
- (NSArray<VIDProfile *> * _Nonnull)retrieveProfiles SWIFT_WARN_UNUSED_RESULT;
/// Start async process of retrieving a profile profile.
/// requires:
/// enrollment should be completed
/// A query to retrieve a profile by it’s ID is issued and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
///
/// returns:
/// <code>VIDProfileDelegate</code>
- (void)retrieveProfile:(NSString * _Nonnull)alias;
/// Update profile information
/// Start update profile information and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
/// \param profile new profile information to be updated
///
///
/// returns:
/// <code>VIDProfileDelegate</code>
- (void)updateProfile:(VIDProfile * _Nonnull)profile;
/// Delete profile
/// Start delete profile and upon completion the result is returned via VIDProfileDelegate. The call is asynchronous.
/// \param profile profile to be deleted
///
///
/// returns:
/// <code>VIDProfileDelegate</code>
- (void)deleteProfile:(VIDProfile * _Nonnull)profile;
/// Export debug logs
/// Debug logs are gathered on the client while in operation. This method exports them in a
/// serialized format.
///
/// returns:
/// serialized debug log
- (NSString * _Nonnull)exportLogs SWIFT_WARN_UNUSED_RESULT;
/// Wipe all account information
/// Local and remote information corresponding to the enrolled account is wiped.
- (void)wipeAccountWhenDone:(void (^ _Nullable)(void))whenDone;
/// Get state
/// Locally stored data and device status can be resumed in a list of SDK states. Based
/// on this list the container app can decide on what workflows to start.
///
/// returns:
/// <code>VIDState</code>
- (enum VIDState)getState SWIFT_WARN_UNUSED_RESULT;
/// Get help
/// By calling getter methods on the returned object, different helper information can be achieved: Version info, disclaimers, how to.
///
/// returns:
/// <code>HelpContent</code>
- (HelpContent * _Nonnull)getHelp SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VIDState, open) {
  VIDStateServerPairing = 0,
  VIDStateAccountRegistration = 1,
  VIDStateBiometricEnrollment = 2,
  VIDStateAccountAdvancedRegistration = 3,
  VIDStateAccountRegisteredAndBiometricsSet = 4,
  VIDStateUrlPairingToken = 5,
  VIDStateAppLinkAuthentication = 6,
  VIDStateOffline = 7,
  VIDStateInitializeFailure = 8,
  VIDStateAppUpdateRequired = 9,
  VIDStateReenrollRequired = 10,
  VIDStateUnknown = 11,
};


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator26VIDMobileSDKStatusDelegate_")
@protocol VIDMobileSDKStatusDelegate <NSObject>
@optional
- (void)didStartLongProcessWithStatus:(enum SDKStatus)status processDescription:(NSString * _Nonnull)processDescription;
- (void)didFinishLongProcessWithStatus:(enum SDKStatus)status;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator10VIDProfile")
@interface VIDProfile : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator18VIDProfileDelegate_")
@protocol VIDProfileDelegate <NSObject>
@optional
- (void)didFinishRetrievingProfiles:(NSArray<VIDProfile *> * _Nonnull)_;
- (void)didFinishRetrievingProfile:(VIDProfile * _Nonnull)_;
- (void)didFailRetrieveProfilesWithError:(VIDError * _Nonnull)error;
- (void)didDeleteProfile:(VIDProfile * _Nonnull)_;
- (void)didFailDeleteProfileWithError:(VIDError * _Nonnull)error;
- (void)didCancelDeleteProfile;
- (void)didFinishUpdateProfile:(VIDProfile * _Nonnull)_;
- (void)didFailUpdateProfileWithError:(VIDError * _Nonnull)error;
- (void)didCancelUpdateProfile;
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator15VIDPushDelegate_")
@protocol VIDPushDelegate <NSObject>
- (void)pushesPending;
@end


SWIFT_PROTOCOL("_TtP20VeridiumOrchestrator17VIDRevokeDelegate_")
@protocol VIDRevokeDelegate <NSObject>
@optional
- (void)wasPermanentlyRevoked:(NSError * _Nullable)error;
- (void)temporarlyBlocked:(BOOL)state;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator11VIDSettings")
@interface VIDSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class VeridiumProfileData;

@interface VeridiumBOPSAccount (SWIFT_EXTENSION(VeridiumOrchestrator))
@property (nonatomic, copy) NSString * _Nonnull enrolledHand;
@property (nonatomic, readonly) NSInteger privateProfilesCount;
- (void)authenticateForProfileId:(NSString * _Nonnull)profileId onActiveSessionId:(NSString * _Nonnull)sessionId completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateForProfile:(VeridiumProfileData * _Nonnull)profile andRegisterForSessionId:(NSString * _Nonnull)sessionId extraValues:(NSDictionary * _Nullable)extraValues completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)cancelSessionId:(NSString * _Nonnull)sessionId completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (NSString * _Nullable)authenticateForProfileId:(NSString * _Nonnull)profileId serverChallenge:(NSString * _Nonnull)serverChallenge completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion SWIFT_WARN_UNUSED_RESULT;
- (void)authenticateAndRemoveForProfile:(VeridiumProfileData * _Nonnull)profile completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateAndRemoveDeviceWithCompletion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateForUpdateForProfile:(VeridiumProfileData * _Nonnull)profile completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)authenticateOfflineForProfile:(VeridiumProfileData * _Nonnull)profile completion:(void (^ _Nonnull)(VeridiumAggregatedAuthResult * _Nonnull, NSError * _Nullable))completion;
- (void)fetchLicenseAndValidateWithForce:(BOOL)force completion:(void (^ _Nonnull)(NSError * _Nullable))completion;
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator19VeridiumPushManager")
@interface VeridiumPushManager : NSObject <UIApplicationDelegate, VeridiumPushHandlerProtocol>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (void)handlePush:(NSDictionary<NSString *, id> * _Null_unspecified)pushData isAPNS:(BOOL)isAPNS;
@end

@class UIView;

SWIFT_CLASS("_TtC20VeridiumOrchestrator30VeridiumQrReaderViewController")
@interface VeridiumQrReaderViewController : UIViewController <VeridiumQRUIDelegateProtocol>
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(BOOL)animated;
- (UIView * _Nonnull)previewView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIStoryboardSegue;

SWIFT_CLASS("_TtC20VeridiumOrchestrator30VeridiumRegisterViewController")
@interface VeridiumRegisterViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)animated;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC20VeridiumOrchestrator35VeridiumRemoteConfigForceEnrollData")
@interface VeridiumRemoteConfigForceEnrollData : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator36VeridiumTXConfirmationViewController")
@interface VeridiumTXConfirmationViewController : UIViewController
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator25VeridiumUIAlertController")
@interface VeridiumUIAlertController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20VeridiumOrchestrator18VersionInformation")
@interface VersionInformation : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
